From abed4e61fa2865893ccb4f0da8c31ab9d431c4d9 Mon Sep 17 00:00:00 2001
From: Madhava Reddy Siddareddygari <msiddare@cisco.com>
Date: Mon, 12 Jul 2021 23:21:08 -0700
Subject: [PATCH] NPU disable unused PCI BAR

For Cisco ASIC only BAR0 is valid. Not disabling other BAR's
was resulting in pci_enable_device function failure.
Further debugging and consultion with Hardware team, issue seems
to be related to ASIC and workaround suggested is to disable
unused PCI BAR

Signed-off-by: Madhava Reddy Siddareddygari <msiddare@cisco.com>
---
 drivers/pci/quirks.c | 52 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index af2149632..1772d8304 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -5462,3 +5462,55 @@ static void apex_pci_fixup_class(struct pci_dev *pdev)
 }
 DECLARE_PCI_FIXUP_CLASS_HEADER(0x1ac1, 0x089a,
 			       PCI_CLASS_NOT_DEFINED, 8, apex_pci_fixup_class);
+
+#define PCI_DEVICE_ID_LEABA_PACIFIC    0xabcd
+#define PCI_DEVICE_ID_LEABA_GIBRALTAR  0xa001
+#define PCI_DEVICE_ID_LEABA_GRAPHENE   0xa003
+#define PCI_DEVICE_ID_LEABA_PALLADIUM  0xa004
+#define PCI_DEVICE_ID_LEABA_ARGON      0xa005
+#define PCI_DEVICE_ID_LEABA_KRYPTON    0xa006
+
+/*
+ * For Pacific A0, only BAR 0 is valid
+ */
+static void silicon_one_fixup(struct pci_dev *dev)
+{
+	int i;
+	struct resource *r;
+
+	for (i = 1; i <= PCI_ROM_RESOURCE; i++) {
+		r = &dev->resource[i];
+		if (!r->start && !r->end && !r->flags)
+			continue;
+
+		dev_info(&dev->dev,
+			"Cisco Silicon One BAR %d %pR fixed up\n", i, r);
+		r->start = 0;
+		r->end = 0;
+		r->flags = 0;
+	}
+	/*
+	 * Pacific device was misbehaving during rescan not enumerating
+	 * memory for bar. Due to this HW issue, added this workaround
+	 * and verified that during rescan memory gets assigned properly
+	 * to the device. This is only a temporary fix.
+	 */
+	dev->class = PCI_CLASS_MEMORY_OTHER << 8;
+	dev_info(&dev->dev, "Cisco Silicon One class adjusted\n");
+}
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_SYNOPSYS,
+		PCI_DEVICE_ID_LEABA_PACIFIC, silicon_one_fixup);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_CISCO,
+		PCI_DEVICE_ID_LEABA_PACIFIC, silicon_one_fixup);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_CISCO,
+		PCI_DEVICE_ID_LEABA_GIBRALTAR, silicon_one_fixup);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_CISCO,
+		PCI_DEVICE_ID_LEABA_GRAPHENE, silicon_one_fixup);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_CISCO,
+		PCI_DEVICE_ID_LEABA_PALLADIUM, silicon_one_fixup);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_CISCO,
+		PCI_DEVICE_ID_LEABA_ARGON, silicon_one_fixup);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_CISCO,
+		PCI_DEVICE_ID_LEABA_KRYPTON, silicon_one_fixup);
+
+
-- 
2.26.2.dirty

