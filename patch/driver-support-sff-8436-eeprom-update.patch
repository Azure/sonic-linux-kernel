Support newer kernel and remove eeprom_class dependency in sff_8436_eeprom

---
 drivers/misc/eeprom/sff_8436_eeprom.c | 16 ++--------------
 include/linux/i2c/sff-8436.h          |  2 --
 2 files changed, 2 insertions(+), 16 deletions(-)

diff --git a/drivers/misc/eeprom/sff_8436_eeprom.c b/drivers/misc/eeprom/sff_8436_eeprom.c
index 3be14d2..bf321a6 100644
--- a/drivers/misc/eeprom/sff_8436_eeprom.c
+++ b/drivers/misc/eeprom/sff_8436_eeprom.c
@@ -85,7 +85,6 @@
 #include <linux/of.h>
 #include <linux/i2c.h>
 #include <linux/i2c/sff-8436.h>
-#include <linux/eeprom_class.h>
 
 #include <linux/types.h>
 #include <linux/memory.h>
@@ -130,7 +129,6 @@ struct sff_8436_data {
 	unsigned num_addresses;
 
 	u8  data[SFF_8436_EEPROM_SIZE];
-	struct eeprom_device *eeprom_dev;
 
 	/* Config variable to support SFF-8472/SFP+ standard */
 	int sfp_compat;
@@ -955,7 +953,7 @@ static ssize_t sff_8436_macc_write(struct memory_accessor *macc,
 
 /*-------------------------------------------------------------------------*/
 
-static int __devexit sff_8436_remove(struct i2c_client *client)
+static int sff_8436_remove(struct i2c_client *client)
 {
 	struct sff_8436_data *sff_8436;
 	int i;
@@ -967,8 +965,6 @@ static int __devexit sff_8436_remove(struct i2c_client *client)
 	for (i = 1; i < sff_8436->num_addresses; i++)
 		i2c_unregister_device(sff_8436->client[i]);
 
-	eeprom_device_unregister(sff_8436->eeprom_dev);
-
 	kfree(sff_8436->writebuf);
 	kfree(sff_8436);
 	return 0;
@@ -1050,7 +1046,6 @@ static int sff_8436_eeprom_probe(struct i2c_client *client,
 
 		chip.setup = NULL;
 		chip.context = NULL;
-		chip.eeprom_data = NULL;
 	}
 
 	if (!is_power_of_2(chip.byte_len))
@@ -1182,13 +1177,6 @@ static int sff_8436_eeprom_probe(struct i2c_client *client,
 		dev_err(&client->dev, "failed to create sysfs attribute group.\n");
 		goto err_struct;
 	}
-	sff_8436->eeprom_dev = eeprom_device_register(&client->dev,
-							chip.eeprom_data);
-	if (IS_ERR(sff_8436->eeprom_dev)) {
-		dev_err(&client->dev, "error registering eeprom device.\n");
-		err = PTR_ERR(sff_8436->eeprom_dev);
-		goto err_sysfs_cleanup;
-	}
 
 	i2c_set_clientdata(client, sff_8436);
 
@@ -1235,7 +1223,7 @@ static struct i2c_driver sff_8436_driver = {
 		.owner = THIS_MODULE,
 	},
 	.probe = sff_8436_eeprom_probe,
-	.remove = __devexit_p(sff_8436_remove),
+	.remove = sff_8436_remove,
 	.id_table = sff8436_ids,
 };
 
diff --git a/include/linux/i2c/sff-8436.h b/include/linux/i2c/sff-8436.h
index cd46896..4df48ad 100644
--- a/include/linux/i2c/sff-8436.h
+++ b/include/linux/i2c/sff-8436.h
@@ -3,7 +3,6 @@
 
 #include <linux/types.h>
 #include <linux/memory.h>
-#include <linux/eeprom_class.h>
 
 /*
  * As seen through Linux I2C, differences between the most common types of I2C
@@ -27,7 +26,6 @@ struct sff_8436_platform_data {
 
 	void		(*setup)(struct memory_accessor *, void *context);
 	void		*context;
-	struct eeprom_platform_data *eeprom_data; /* extra data for the eeprom_class */
 };
 
 #endif /* _LINUX_SFF_8436_H */
-- 
2.7.4

